"""init schema

Revision ID: 9035fa9fd2ac
Revises: 
Create Date: 2025-09-10 11:30:44.095169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9035fa9fd2ac'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenat_id', sa.UUID(), nullable=False),
    sa.Column('mrn', sa.String(), nullable=False),
    sa.Column('give_name', sa.String(), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('identifiers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('consents', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('encounters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('encounter_type', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_encounters_id'), 'encounters', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_encounters_id'), table_name='encounters')
    op.drop_table('encounters')
    op.drop_table('users')
    op.drop_table('patients')
    # ### end Alembic commands ###
